<!DOCTYPE HTML>
<html lang="nl">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>
      Zeus WPI | <%= item[:title] || 'Werkgroep Informatica van de Universiteit Gent' %>
    </title>

    <link rel="icon" href="/assets/images/favicon32.png" type="image/x-icon">

    <meta name="generator" content="Nanoc <%= Nanoc::VERSION %>">

    <!-- Android theme color -->
    <meta name="theme-color" content="#FF7F00">

    <meta property="fb:app_id" content="597670540410704">

    <!-- Custom CSS -->
    <%= asset :css, :main %>

    <!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- Make sure search engines only cache one deployment of this site -->
    <link rel="canonical" href="<%= "#{@config[:base_url]}#{@item.path}" %>">
    
    <!-- Fathom - simple website analytics - https://github.com/usefathom/fathom -->
    <script>
    (function(f, a, t, h, o, m){
      a[h]=a[h]||function(){
        (a[h].q=a[h].q||[]).push(arguments)
      };
      o=f.createElement('script'),
      m=f.getElementsByTagName('script')[0];
      o.async=1; o.src=t; o.id='fathom-script';
      m.parentNode.insertBefore(o,m)
    })(document, window, '//stats.zeus.gent/tracker.js', 'fathom');
    fathom('trackPageview');
    </script>
    <!-- / Fathom -->

    <%= content_for(@item, :head) %>
  </head>

  <body class="site">
    <script>
      // only add mirror css class if mirrored is true in cookie
      if (document.cookie.includes("mirrored=true")) {
        document.body.classList.add('mirrored');
      }
    </script>
    <script>
      let translations = {};
      let currentLocale = 'nl';

      function loadLocale(locale) {
        console.log(`Loading locale: ${locale}`);
        fetch(`/i18n/${locale}.json`)
              .then(res => {
                if (!res.ok) throw new Error(`HTTP ${res.status}`);
                return res.json();
              })
          .then(json => {
            translations = json[locale];
            applyTranslations();
            currentLocale = locale;
            document.documentElement.lang = locale; // also update <html lang>
          })
          .catch(err => {
            console.error(`Failed to load ${locale}.json`, err);
          });
      }

      function applyTranslations() {
        document.querySelectorAll('[data-i18n]').forEach(el => {
          const key = el.getAttribute('data-i18n');
          const keys = key.split('.');
          let value = translations;
          for (let k of keys) {
            value = value?.[k] ?? value;
          }
          if (typeof value === 'string') {
            // check for HTML arguments
            let args = {};
            const argsAttr = el.getAttribute('data-i18n-args');
            if (argsAttr) {
              try {
                args = JSON.parse(argsAttr);
              } catch(e) { console.error("Invalid JSON in data-i18n-args", e); }
            }

            // replace placeholders like %{hydra}, %{urenloop} with HTML
            Object.keys(args).forEach(argKey => {
              const re = new RegExp(`%\\{${argKey}\\}`, 'g');
              value = value.replace(re, args[argKey]);
            });

            el.innerHTML = value; // use innerHTML so links render
          }
        });

          document.querySelectorAll('[data-i18n-placeholder]').forEach(el => {
            const key = el.getAttribute('data-i18n-placeholder');
            const keys = key.split('.');
            let value = translations;
            for (let k of keys) value = value?.[k];
            if (typeof value === 'string') el.placeholder = value ?? el.placeholder;
          });
      }

      // Load default locale
      loadLocale(currentLocale);

      // Language switcher
      document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.language-switcher a').forEach(link => {
          link.addEventListener('click', e => {
            e.preventDefault();
            const locale = link.dataset.locale;
            console.log("Clicked locale:", locale);
            if (locale !== currentLocale) loadLocale(locale);
          });
        });
      });
    </script>

    <div class="wrapper">
      <%= yield %>
    </div>
    <%= render '/partials/_footer.*' %>

    <%= content_for(@item, :scripts) %>
    <%= asset :js, :search %>
  </body>
</html>
